/* --- Dashboard.module.css --- */

/* Layout: General Page Structure */
.dashboardLayout {
  display: flex;
  min-height: 100vh; 
  min-height: 100dvh; /* Dynamic viewport height for modern browsers */
  background-color: var(--background-color);
}

.mainContent {
  flex: 1;
  transition: margin-left var(--transition-slow);
  margin-left: calc(var(--sidebar-width-expanded) + var(--main-content-padding));
  padding: 0 var(--main-content-padding) var(--main-content-padding);
  padding-top: calc(var(--navbar-height) + var(--main-content-padding));
  box-sizing: border-box;
  height: 100vh; 
  height: 100dvh; 
  display: flex;
  flex-direction: column;
  overflow: hidden; /* mainContent itself should not scroll */
}

.mainContent.sidebarCollapsed {
  margin-left: calc(var(--sidebar-width-collapsed) + var(--main-content-padding));
}

.pageContainer {
  background-color: var(--card-background-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-xl);
  padding: 1.25rem; /* 20px */
  width: 100%;
  box-sizing: border-box;
  display: flex; 
  flex-direction: column; 
  flex-grow: 1; /* pageContainer fills available vertical space */
  min-height: 0; /* Important for flex children sizing */
  overflow: hidden; /* pageContainer clips content; grid inside manages its own overflow */
}

.contentWrapper { /* This wrapper holds the profile prompt and the main grid */
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
  height: 100%; /* Fills pageContainer */
  overflow: hidden; /* Should not scroll; grid below handles content scroll */
}
.contentWrapper::-webkit-scrollbar { display: none; }


/* Complete Profile Prompt */
.completeProfilePrompt {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.8rem 1.1rem;
  background-color: var(--warning-bg-light);
  color: var(--warning-color-dark);
  border: 1px solid var(--warning-color);
  border-left: 4px solid var(--warning-color);
  border-radius: var(--border-radius-lg);
  font-size: 0.95rem;
  font-weight: 500;
  text-decoration: none;
  margin-bottom: 1.25rem;
  box-shadow: var(--shadow-sm);
  flex-shrink: 0; /* Prevent prompt from shrinking */
}
.completeProfilePrompt:hover { box-shadow: var(--shadow-md); filter: brightness(0.98); }
.completeProfilePrompt svg { width: 22px; height: 22px; flex-shrink: 0; }

/* Main container for the two-row layout */
.dashboardOuterContainer {
  display: flex;
  flex-direction: column;
  gap: 1.25rem; /* Gap between top row and bottom content */
  flex-grow: 1;
  min-height: 0;
  height: 100%;
  overflow: hidden; /* Ensure this outer container does not scroll */
}

/* Top row grid with 3 columns */
.topRowGrid {
  display: grid;
  grid-template-columns: 2fr 2.8fr 1.2fr; /* Pass | Progress (wider) | Quick Actions */
  gap: 1.25rem;
  flex-shrink: 0; /* Top row should not shrink if bottom content is large */
  /* Height of this row will be determined by its content */
}

/* Bottom content area - now a grid itself */
.bottomContentGrid {
  display: grid;
  /* Match visual split of top row: Col1 | Col2 + Col3 */
  grid-template-columns: 2fr calc(2.8fr + 1.2fr + 1.25rem); 
  gap: 1.25rem;
  flex-grow: 1; /* Takes remaining vertical space */
  min-height: 0; /* Important for grid children */
  overflow: hidden; /* Manages its own overflow if necessary */
}

.bottomLeftColumn {
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  min-height: 0; /* Important for flex children */
  overflow: hidden; /* This column itself shouldn't scroll */
}


/* Grid Area Definitions for top row */
.gridAreaPass, .gridAreaProgress, .gridAreaQuickActions {
  min-height: 0; /* Allow content to define height */
  overflow: hidden; /* Prevent individual grid areas from showing scrollbars if section content overflows */
}

/* Grid Area Definitions for bottom row content */
.gridAreaNeighbors      { flex-shrink: 0; min-height: 0; overflow: hidden; } 
.gridAreaNotifications  { flex-grow: 1; min-height: 0; overflow: hidden; }
.gridAreaApplicationsFullWidth { 
    min-height: 0; overflow: hidden;
}


/* Styling for <section> elements */
.section { /* Applied to all section tags */
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  min-height: 0; 
  overflow: hidden; 
  padding: 1.25rem;
  background-color: var(--card-background-color);
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-md);
  border: 1px solid var(--border-color);
}

/* Section Titles */
.mainSectionTitle {
  font-size: 1.4rem; font-weight: 700; color: var(--text-primary);
  margin: 0 0 1rem 0; padding-bottom: 0.6rem;
  border-bottom: 1px solid var(--border-color); flex-shrink: 0;
}
.sectionTitle {
  font-size: 1.25rem; font-weight: 600; color: var(--text-primary);
  margin: 0 0 0.85rem 0; padding-bottom: 0.5rem;
  border-bottom: 1px solid var(--border-color-light);
  display: flex; align-items: center; flex-shrink: 0;
}
.sectionTitleIconInternal {
  width: 1.05em; height: 1.05em; margin-right: 0.45em; vertical-align: -0.1em; color: var(--primary-color);
}
.sectionTitlePassCard {
  font-size: 1.25rem; font-weight: 600; color: var(--text-primary);
  margin: 0 0 0.75rem 0; flex-shrink: 0;
}

/* Pass Card specific layout */
.passCardSection > .sectionTitlePassCard + div { /* Targets the div wrapper of DormPassCard */
  flex-grow: 1; display: flex; align-items: center; justify-content: center; min-height: 0;
}
.passCardSection .passCardContainer { /* Assuming DormPassCard has a .passCardContainer root */
  margin-top: 0.25rem; margin-bottom: 0.25rem;
  width: 100%; max-width: 370px; /* Slightly wider for pass */
  min-height: 225px; /* Ensure pass card is visible */
}


/* Scrollable Content Areas - apply to lists that need scrolling */
/* Default: SettlementSteps and QuickActions in top row are NOT scrollable */
.settlementProgressSection .settlementStepsContainer,
.quickActionsSection .quickActions {
    overflow-y: visible; /* Ensure full visibility if content fits */
    padding-right: 0;
    margin-right: 0;
    flex-grow: 0; /* Content determines height */
    flex-shrink: 0; /* Don't shrink if other flex items grow */
}

/* Lists in bottom row will scroll if content exceeds their allocated space */
.roommatesSection .roommatesList,
.notificationsSection .activityList,
.applicationsSection .activityList {
  flex-grow: 1; /* Take available space in their parent section */
  overflow-y: auto;
  min-height: 0; /* Crucial for scrollable flex children */
  padding-right: 5px; /* Space for scrollbar */
  margin-right: -5px; /* Offset for scrollbar */
  list-style: none; padding-left: 0; margin:0;
}

/* Scrollbar styling for these lists */
.roommatesList::-webkit-scrollbar,
.activityList::-webkit-scrollbar { width: 5px; }

.roommatesList::-webkit-scrollbar-thumb,
.activityList::-webkit-scrollbar-thumb {
  background-color: var(--border-color);
  border-radius: var(--border-radius-full);
}
.roommatesList::-webkit-scrollbar-track,
.activityList::-webkit-scrollbar-track { background-color: transparent; }


/* Settlement Progress Steps - Enhanced Styles */
.settlementStep {
  display: flex; align-items: flex-start; 
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius-lg);
  background-color: var(--background-light);
  border: 1px solid var(--border-color);
  transition: all var(--transition-base);
  cursor: default; 
  opacity: 1;
  margin-bottom: 0.85rem;
  box-shadow: var(--shadow-xs);
}
.settlementStep:last-child { margin-bottom: 0; }

.settlementStep[role="button"]:hover:not(.activeStep):not(.completedStep) {
  border-color: var(--primary-color-medium);
  background-color: var(--primary-bg-light);
  transform: translateY(-2px); 
  box-shadow: var(--shadow-md);
}
.settlementStep.activeStep {
  border-color: var(--primary-color); 
  background-color: var(--primary-bg-selected);
  box-shadow: var(--shadow-lg);
  cursor: pointer;
}
.settlementStep.completedStep:not(.rejectedCompletedStep) {
  border-color: var(--success-color); 
  background-color: var(--success-bg-light); 
}
.settlementStep.completedStep.rejectedCompletedStep {
  border-color: var(--error-color); 
  background-color: var(--error-bg-light); 
}
.settlementStep.completedStep.rejectedCompletedStep .stepTitle,
.settlementStep.completedStep.rejectedCompletedStep .stepStatus { color: var(--error-color-darker); }
.settlementStep.completedStep.rejectedCompletedStep .stepIconWrapper {
  background-color: var(--error-color-dark); color: var(--text-on-error);
}
.stepIconWrapper {
  margin-right: 1rem; width: 40px; height: 40px;
  border-radius: 50%; display: flex; align-items: center; justify-content: center;
  background-color: var(--border-color-strong); color: var(--text-secondary); 
  transition: background-color 0.2s, color 0.2s;
  flex-shrink: 0;
}
.settlementStep.activeStep .stepIconWrapper { background-color: var(--primary-color); color: var(--text-on-primary); }
.settlementStep.completedStep:not(.rejectedCompletedStep) .stepIconWrapper { background-color: var(--success-color); color: var(--text-on-success); }
.stepIcon, .stepIconCompleted, .stepIconRejected { width: 22px; height: 22px; }
.stepText { flex-grow: 1; min-width: 0; }
.stepTitle { font-size: 1.1rem; margin-bottom: 0.25rem; font-weight: 600; color: var(--text-primary); }
.settlementStep.activeStep .stepTitle { color: var(--primary-color-darker); }
.settlementStep.completedStep:not(.rejectedCompletedStep) .stepTitle { color: var(--success-color-darker); }
.stepStatus { font-size: 0.9rem; line-height: 1.4; color: var(--text-secondary); }
.stepAction { 
  display: inline-flex; align-items: center; font-size: 0.95rem; margin-top: 0.5rem; gap: 0.3rem;
  font-weight: 600; color: var(--primary-color); text-decoration: none; transition: color var(--transition-fast);
}
.stepAction:hover { color: var(--primary-color-darker); }
.stepAction svg.stepActionIcon { width: 15px; height: 15px; }


/* List Header */
.listHeader { display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.6rem; flex-shrink: 0; }
.listHeader .sectionTitle { margin-bottom: 0; border-bottom: none; padding-bottom: 0; }
.viewAllLink { font-size: 0.9rem; padding: 0.25rem 0.5rem; color: var(--primary-color); text-decoration: none; font-weight: 500; white-space: nowrap; margin-left: auto; border-radius: var(--border-radius-sm); transition: background-color var(--transition-fast), color var(--transition-fast); }
.viewAllLink:hover { background-color: var(--primary-bg-light); text-decoration: none; color: var(--primary-color-dark); }

/* Activity Item */
.activityItem { display: flex; align-items: flex-start; padding: 0.8rem 0.3rem; border-bottom: 1px solid var(--border-color-lightest); cursor: pointer; transition: background-color var(--transition-fast); }
.activityItem:last-child { border-bottom: none; }
.activityItem:hover { background-color: var(--background-light); }
.itemIcon { width: 20px; height: 20px; margin-right: 0.75rem; margin-top: 2px; color: var(--primary-color); flex-shrink: 0; }
.itemContent { display: flex; flex-direction: column; flex-grow: 1; min-width: 0; }
.itemTitle { font-size: 1rem; font-weight: 500; margin-bottom: 0.15rem; color: var(--text-primary); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
.itemStatus { font-size: 0.95rem; font-weight: 400; color: var(--text-muted); margin-left: 0.25rem; }
.itemDetails { font-size: 0.85rem; margin-bottom: 0.15rem; color: var(--text-secondary); line-height: 1.35; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
.itemDate { font-size: 0.8rem; color: var(--text-muted); opacity: 0.8; }
.readNotification .itemTitle, .readNotification .itemDetails, .readNotification .itemDate { color: var(--text-muted); }
.readNotification .itemIcon { opacity: 0.6; }


/* Roommate Item */
.roommateItem { display: flex; align-items: center; gap: 0.75rem; padding: 0.75rem; background-color: var(--background-ultralight); border-radius: var(--border-radius-md); border: 1px solid var(--border-color-lightest); transition: background-color var(--transition-fast); }
.roommateItem:hover { background-color: var(--primary-bg-ultralight); }
.roommateInfo { display: flex; flex-direction: column; }
.roommateName { font-size: 1rem; font-weight: 500; color: var(--text-primary); }

/* Quick Actions - Enhanced Styles */
.quickActionsSection .quickActions {
    display: flex;
    flex-direction: column;
    gap: 0.85rem; /* Increased gap between quick action links */
    overflow-y: visible; 
    padding: 0.25rem; /* Add some padding around the links */
}
/* Styles for QuickActionLink itself should be in its own module, but for demo: */
.quickAction {
  display: flex; align-items: center; gap: 0.85rem; 
  padding: 0.9rem 1.3rem; /* Larger padding */
  background-color: var(--background-light); 
  border: 1px solid var(--border-color-medium); /* Slightly stronger border */
  border-radius: var(--border-radius-lg);
  color: var(--text-primary); text-decoration: none;
  font-weight: 500; font-size: 1rem; /* Larger font */
  transition: all var(--transition-base); box-shadow: var(--shadow-xs);
}
.quickAction:hover {
  background-color: var(--primary-bg-light); border-color: var(--primary-color);
  color: var(--primary-color-darker); transform: translateY(-2px); box-shadow: var(--shadow-md);
}
.quickAction.isPrimary {
  background-color: var(--primary-color); border-color: var(--primary-color); color: var(--text-on-primary);
  box-shadow: var(--shadow-sm);
}
.quickAction.isPrimary:hover {
  background-color: var(--primary-color-dark); border-color: var(--primary-color-dark);
  box-shadow: var(--shadow-md);
}
.quickAction .actionIcon svg {
    width: 22px; height: 22px; /* Larger icon */
    color: var(--primary-color);
}
.quickAction.isPrimary .actionIcon svg { color: var(--text-on-primary); }


/* "No Items" Placeholders */
.noRoommatesMessage, .noItemsMessage {
  font-size: 0.95rem; padding: 1.2rem 0.6rem; min-height: 60px; color: var(--text-muted);
  text-align: center; font-style: italic; flex-grow: 1; display: flex; flex-direction: column;
  align-items: center; justify-content: center;
}
.noItemsIcon, .noItemsIconSmall { color: var(--text-placeholder); margin-bottom: 0.4rem; }
.noItemsIcon { width: 30px; height: 30px; }
.noItemsIconSmall { width: 26px; height: 26px; }
.compactNoItems { padding: 0.75rem; font-size: 0.9rem; min-height: 50px; }

/* Full Page Loading/Error States */
.loadingStateFullPage,
.errorMessageContainerFullPage.centeredMessage {
  display: flex; flex-direction: column; align-items: center; justify-content: center;
  padding: 20px 10px; text-align: center; color: var(--text-secondary);
  background-color: var(--card-background-color);
  box-shadow: var(--shadow-md);
  flex-grow: 1;
  border-radius: var(--border-radius-lg);
}
.errorMessageContainerFullPage h3 { font-size: 1.1rem; margin-top: 1rem; margin-bottom: 0.5rem; color: var(--error-color-dark); }
.errorIconLarge { width: 40px; height: 40px; color: var(--error-color); margin-bottom: 0.75rem; }
.retryButton { 
  margin-top: 1rem; padding: 0.5rem 1rem; background-color: var(--primary-color);
  color: white; border: none; border-radius: var(--border-radius-md); cursor: pointer;
  font-weight: 500; font-size: 0.85rem;
  transition: background-color var(--transition-fast), transform var(--transition-fast);
  box-shadow: var(--shadow-xs);
}
.retryButton:hover { background-color: var(--primary-color-dark); transform: translateY(-1px); box-shadow: var(--shadow-sm); }


/* --- Responsive Design --- */
@media (max-width: 1200px) { 
    .topRowGrid {
        grid-template-columns: 1.8fr 2.5fr 1.2fr;
        gap: 1rem;
    }
    .bottomContentGrid {
        grid-template-columns: Minmax(280px, 1.8fr) Minmax(350px, calc(2.5fr + 1.2fr + 1rem));
        gap: 1rem;
    }
    .pageContainer { padding: 1rem; }
}


@media (max-width: 1024px) { /* Tablet */
  .pageContainer { padding: 1rem; }
  .dashboardOuterContainer { gap: 1rem; }
  .topRowGrid {
    grid-template-columns: 1fr 1fr; /* Pass+Progress | QuickActions */
    gap: 1rem;
  }
  .gridAreaPass           { grid-area: 1 / 1 / 2 / 2; }
  .gridAreaProgress       { grid-area: 1 / 2 / 2 / 3; }
  .gridAreaQuickActions   { grid-area: 2 / 2 / 3 / 3; /* Under Progress */ }
  
  .bottomContentGrid {
    grid-template-columns: 1fr; /* Stack bottom content */
    gap: 1rem;
  }
  .bottomLeftColumn {
    grid-area: auto; 
    flex-direction: row; 
    gap: 1rem;
  }
  .gridAreaNeighbors, .gridAreaNotifications {
      flex-basis: calc(50% - 0.5rem); 
      flex-grow: 1;
  }
  .gridAreaApplicationsFullWidth { grid-area: auto; }

  .mainSectionTitle { font-size: 1.2rem; }
  .sectionTitle { font-size: 1.05rem; }
}

@media (max-width: 768px) { /* Mobile */
  .mainContent {
    margin-left: 0 !important;
    padding: 0 var(--main-content-padding-mobile, 0.75rem) var(--main-content-padding-mobile, 0.75rem);
    padding-top: calc(var(--navbar-height) + var(--main-content-padding-mobile, 0.75rem));
  }
  .pageContainer { 
    padding: var(--main-content-padding-mobile, 0.75rem); 
    border-radius: var(--border-radius-lg);
  }
  
  .dashboardOuterContainer, .topRowGrid, .bottomContentGrid, .bottomLeftColumn {
    display: flex;
    flex-direction: column; 
    gap: 1rem;
  }
  /* .studentDashboardGrid is not the primary layout container on mobile here */
  
  .gridAreaPass, .gridAreaProgress, .gridAreaQuickActions, 
  .gridAreaNeighbors, .gridAreaNotifications, .gridAreaApplicationsFullWidth {
    width: 100%;
    min-height: auto; 
  }
  
  .section { 
    height: auto; 
    min-height: 180px;
    padding: 0.8rem;
  }
  
  .settlementStepsContainer, .quickActions, .roommatesList, .activityList {
    max-height: 250px; 
    overflow-y: auto; 
    padding-right: 5px; 
    margin-right: -5px;
  }
  /* Ensure top row items are fully visible on mobile by default if not too long */
  .settlementProgressSection .settlementStepsContainer,
  .quickActionsSection .quickActions {
     overflow-y: visible; padding-right: 0; margin-right: 0; max-height: none;
  }

  .mainSectionTitle { font-size: 1.1rem; }
  .sectionTitle { font-size: 1rem; }
}

@media (max-width: 480px) {
  .pageContainer { padding: 0.5rem; }
  .dashboardOuterContainer, .topRowGrid, .bottomContentGrid, .bottomLeftColumn { gap: 0.75rem; }

  .section { padding: 0.6rem; min-height: 150px; }
  .mainSectionTitle { font-size: 1rem; }
  .sectionTitle { font-size: 0.9rem; }
}