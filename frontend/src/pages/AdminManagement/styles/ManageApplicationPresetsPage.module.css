/* Variables are now expected to be in a global scope (e.g. :root in index.css or variables.css) */

.layout {
  display: flex;
  min-height: 100vh;
  background: var(--background-color);
  font-family: var(--font-family-sans);
  overflow-x: hidden;
}
.mainContent {
  flex: 1;
  transition: margin-left var(--transition-slow);
  margin-left: calc(var(--sidebar-width-expanded) + var(--main-content-padding));
  padding: 0 var(--main-content-padding) var(--main-content-padding);
  padding-top: calc(var(--navbar-height) + var(--main-content-padding));
  box-sizing: border-box;
  min-height: 100vh;
  overflow: hidden;
}
.mainContent.sidebarCollapsed {
  margin-left: calc(var(--sidebar-width-collapsed) + var(--main-content-padding));
}
.pageContainer {
  background: var(--card-background-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-xl);
  padding: 24px;
  margin-top: var(--page-container-margin-top);
  width: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  height: calc(100vh - var(--navbar-height) - (var(--page-container-margin-top) * 2) - var(--main-content-padding));
  overflow: hidden;
}
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
  padding-bottom: 16px;
  border-bottom: 1px solid var(--border-color);
  flex-shrink: 0;
  flex-wrap: wrap;
  gap: 12px;
}
.pageTitle {
  font-size: 1.75rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  display: flex;
  align-items: center;
  gap: 0.625rem;
}
.titleIcon {
  width: 1.625rem;
  height: 1.625rem;
  color: var(--primary-color);
}

.actionButtonMain {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.625rem 1.25rem;
  background-color: var(--primary-color);
  color: var(--text-on-primary);
  font-weight: 500;
  font-size: 0.9rem;
  border: none;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: background-color var(--transition-base);
}
.actionButtonMain:hover:not(:disabled) {
  background-color: var(--primary-color-dark);
}
.actionButtonMain:disabled {
  background-color: var(--text-placeholder);
  cursor: not-allowed;
}
.buttonIcon { /* Для кнопок типу "Додати" */
  width: 1.125rem;
  height: 1.125rem;
}
.buttonIconSm { /* Для менших іконок, наприклад, в кнопці "Скинути фільтри" */
    width: 1rem;
    height: 1rem;
}


.contentWrapper {
  flex-grow: 1;
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  min-height: 0;
}

.filtersPanel { /* Нова панель фільтрів */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); /* Адаптивні колонки */
  gap: 1rem;
  margin-bottom: 1.5rem;
  padding: 1rem;
  background-color: var(--background-light);
  border-radius: var(--border-radius-lg);
  border: 1px solid var(--border-color-light);
}
.inputField, .selectField { /* Загальний стиль для інпутів/селектів у фільтрах */
  width: 100%;
  padding: 0.625rem 0.75rem;
  border: 1px solid var(--border-color-dark, #d1d5db);
  border-radius: var(--border-radius-md, 0.375rem);
  box-sizing: border-box;
  font-size: 0.875rem;
  font-family: var(--font-family-sans, 'Roboto', sans-serif);
  transition: border-color var(--transition-base);
  background-color: var(--card-background-color, white);
}
.inputField:focus, .selectField:focus {
  outline: none;
  border-color: var(--primary-color, #3b82f6);
}
.inputField::placeholder {
  color: var(--text-placeholder, #9ca3af);
}
.resetFilterButton { /* Стиль для кнопки скидання фільтрів */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.625rem 1rem;
  background-color: var(--text-muted);
  color: var(--text-on-primary);
  font-weight: 500;
  font-size: 0.875rem;
  border: none;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: background-color var(--transition-base);
  /* Можна додати grid-column: 1 / -1; якщо кнопка має бути на всю ширину */
}
.resetFilterButton:hover {
  background-color: var(--text-secondary);
}


.tableContainer {
  overflow-x: auto;
  border: 1px solid var(--border-color, #e5e7eb);
  border-radius: var(--border-radius-lg, 8px);
  background-color: var(--card-background-color, white);
  max-width: 100%;
  box-sizing: border-box;
  flex-grow: 1;
  min-height: 0;
  display: flex;
  flex-direction: column;
}
.table {
  width: 100%;
  min-width: 1000px; /* Збільшено для нових колонок */
  border-collapse: collapse;
  font-size: 0.875rem;
}
.table th,
.table td {
  border-bottom: 1px solid var(--border-color-light, #e5e7eb);
  padding: 0.75rem 1rem;
  text-align: left;
  vertical-align: middle;
  white-space: nowrap;
}
.table th {
  background-color: var(--background-light, #f9fafb);
  font-weight: 500;
  color: var(--text-primary, #374151);
  text-transform: uppercase;
  font-size: 0.75rem;
  letter-spacing: 0.05em;
  cursor: pointer;
}
.table th:hover {
  color: var(--primary-color);
}
.sortIcon { /* Іконка сортування */
  width: 1rem;
  height: 1rem;
  stroke-width: 2;
  margin-left: 0.25rem;
  color: var(--text-muted);
}
.table th:hover .sortIcon {
    color: var(--primary-color);
}
.table td:first-child,
.table th:first-child {
  padding-left: 1.5rem;
}
.table td:last-child,
.table th:last-child {
  padding-right: 1.5rem;
  text-align: right;
}
.table tbody tr:hover {
  background-color: var(--primary-bg-hover-light, #f3f4f6);
}
.actionsCell {
  text-align: right;
  white-space: nowrap;
}
.actionButton {
  background: transparent;
  border: none;
  padding: 0.375rem;
  cursor: pointer;
  color: var(--text-muted);
  transition: color var(--transition-base), transform var(--transition-fast);
  margin-left: 0.5rem;
}
.actionButton:hover:not(:disabled) {
  transform: translateY(-1px);
}
.actionButton svg {
  width: 1.125rem;
  height: 1.125rem;
  stroke-width: 1.5;
}
.editButton:hover:not(:disabled) {
  color: var(--primary-color);
}
.deleteButton:hover:not(:disabled) {
  color: var(--error-color);
}
.actionButton:disabled {
  color: var(--border-color-dark);
  cursor: not-allowed;
}
.commentHeader {
  min-width: 200px;
}
.commentCell {
  max-width: 250px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: help;
}
.actionsHeader {
  min-width: 100px;
  text-align: right;
}
.statusCell { /* Для колонки "Активний" */
    text-align: center;
}
.statusIconActive {
    color: var(--success-color);
    width: 1.25rem;
    height: 1.25rem;
}
.statusIconInactive {
    color: var(--text-muted);
    width: 1.25rem;
    height: 1.25rem;
}

.emptyMessage,
.loading {
  text-align: center;
  padding: 2rem;
  color: var(--text-muted);
  font-style: italic;
  font-size: 1rem;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.emptyMessage svg {
  width: 3rem;
  height: 3rem;
  margin-bottom: 1rem;
  color: var(--text-muted);
}
.errorMessage {
  background: var(--error-bg-light);
  color: var(--error-color);
  padding: 1rem;
  border-radius: var(--border-radius-md);
  text-align: center;
  font-size: 1rem;
  border: 1px solid var(--error-color);
}

/* Modal Styles */
.modalOverlayGlobal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(31, 41, 55, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1050;
  padding: 16px;
  box-sizing: border-box;
  backdrop-filter: blur(4px);
}
.modalContentGlobal {
  background: var(--card-background-color);
  padding: 0;
  border-radius: var(--border-radius-lg);
  border: 1px solid var(--border-color);
  width: 100%;
  max-width: 600px;
  max-height: 90vh;
  position: relative;
  display: flex;
  flex-direction: column;
  animation: fadeInScaleUp 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
}
@keyframes fadeInScaleUp {
  from { opacity: 0; transform: scale(0.95) translateY(10px); }
  to { opacity: 1; transform: scale(1) translateY(0); }
}
.closeButtonIconGlobal {
  position: absolute;
  top: 12px;
  right: 12px;
  background: transparent;
  border: none;
  padding: 6px;
  cursor: pointer;
  color: var(--text-muted);
  transition: color var(--transition-base), background-color var(--transition-base);
  border-radius: var(--border-radius-full);
  z-index: 10;
}
.closeButtonIconGlobal:hover {
  color: var(--text-primary);
  background-color: var(--border-color-light);
}
.closeButtonIconGlobal svg {
  width: 20px;
  height: 20px;
  stroke-width: 2.5;
}
.modalInnerContent {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}
.modalHeader {
  padding: 16px 24px;
  border-bottom: 1px solid var(--border-color-light);
  flex-shrink: 0;
  display: flex;
  align-items: center;
}
.modalTitle {
  font-size: 1.35rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  display: flex;
  align-items: center;
}
.modalTitleIcon {
  width: 1.5rem;
  height: 1.5rem;
  margin-right: 0.625rem;
  color: var(--primary-color);
}
.modalBody {
  padding: 20px 24px;
  overflow-y: auto;
  flex-grow: 1;
}
.formGroup {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
}
.formRow {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-bottom: 1rem;
}
.inputLabel {
  display: block;
  margin-bottom: 6px;
  font-weight: 500;
  font-size: 0.875rem;
  color: var(--text-secondary);
}
.inputField, .selectField, .textareaField {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid var(--border-color-dark);
  border-radius: var(--border-radius-md);
  font-size: 0.9rem;
  font-family: var(--font-family-sans);
  background-color: var(--card-background-color);
  color: var(--text-primary);
  transition: border-color var(--transition-base), box-shadow var(--transition-base);
  box-sizing: border-box;
}
.inputField:focus, .selectField:focus, .textareaField:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 59, 130, 246), 0.2);
}
.inputField:disabled, .selectField:disabled, .textareaField:disabled {
    background-color: var(--background-light);
    cursor: not-allowed;
    opacity: 0.7;
}
.textareaField {
  min-height: 80px;
  resize: vertical;
}
.inputError {
  border-color: var(--error-color) !important;
}
.inputError:focus {
  box-shadow: 0 0 0 2px rgba(var(--error-color-rgb, 239, 68, 68), 0.2) !important;
}
.errorMessage {
  font-size: 0.75rem;
  color: var(--error-color-dark);
  margin-top: 4px;
}
.checkboxGroup { /* Стиль для чекбокса is_active */
  display: flex;
  align-items: center;
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.checkboxInput {
  width: 1rem;
  height: 1rem;
  margin-right: 0.5rem;
  accent-color: var(--primary-color);
  cursor: pointer;
}
.checkboxLabel {
  font-size: 0.9rem;
  color: var(--text-secondary);
  cursor: pointer;
  user-select: none;
  margin-bottom: 0;
}
.modalFooter {
  padding: 16px 24px;
  border-top: 1px solid var(--border-color-light);
  background-color: var(--background-light);
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  flex-shrink: 0;
  margin-top: auto;
}
.formButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.6rem 1.2rem;
  border-radius: var(--border-radius-md);
  border: 1px solid transparent;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s;
}
.formButton svg {
  width: 18px;
  height: 18px;
}
.cancelButton {
  background-color: var(--background-light);
  color: var(--text-secondary);
  border-color: var(--border-color);
}
.cancelButton:hover:not(:disabled) {
  background-color: var(--border-color-light);
}
.submitButton {
  background-color: var(--primary-color);
  color: var(--text-on-primary);
}
.submitButton:hover:not(:disabled) {
  background-color: var(--primary-color-dark);
}
.formButton:disabled {
  background-color: var(--text-placeholder);
  color: var(--text-on-dark);
  cursor: not-allowed;
  border-color: transparent;
}
.paginationWrapper { /* Для пагінації */
  display: flex;
  justify-content: center;
  align-items: center;
  padding-top: 20px;
  margin-top: 16px;
  border-top: 1px solid var(--border-color);
  flex-shrink: 0;
}


/* Адаптивність */
@media (max-width: 1024px) {
  .mainContent {
    margin-left: calc(var(--sidebar-width-collapsed) + 12px);
    padding: 0 12px 12px;
    padding-top: calc(var(--navbar-height) + 12px);
  }
  .mainContent.sidebarCollapsed {
     margin-left: calc(var(--sidebar-width-collapsed) + 12px);
  }
  .pageContainer {
    padding: 20px;
    margin-top: 12px;
    height: calc(100vh - var(--navbar-height) - (12px * 2) - var(--page-container-margin-top));
  }
  .pageTitle { font-size: 1.5rem; }
  .titleIcon { width: 1.5rem; height: 1.5rem; }
  .filtersPanel { grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); }
}

@media (max-width: 768px) {
  .mainContent {
    margin-left: 0 !important;
    padding: 0 10px 10px;
    padding-top: calc(var(--navbar-height) + 10px);
  }
  .pageContainer {
    padding: 16px;
    margin-top: 10px;
    height: calc(100vh - var(--navbar-height) - (10px * 2) - var(--page-container-margin-top));
  }
  .header {
    flex-direction: column;
    align-items: stretch;
    gap: 12px;
  }
  .pageTitle { font-size: 1.375rem; text-align: center; }
  .actionButtonMain { width: 100%; justify-content: center; }
  .filtersPanel { grid-template-columns: 1fr; }
  .resetFilterButton { grid-column: auto; }
  .table th, .table td { font-size: 0.8125rem; white-space: normal; }
  .modalContentGlobal { max-width: 95%; }
  .modalHeader, .modalBody, .modalFooter { padding: 12px 16px; }
  .modalTitle { font-size: 1.2rem; }
  .formRow { grid-template-columns: 1fr; }
  .modalFooter { flex-direction: column-reverse; }
  .formButton { width: 100%; }
}