version: "3.8"

services:
    redis:
        image: redis:7-alpine
        command: redis-server --requirepass Y47VIdUF8rqwomHRSH2gwFITpjys2kBW --bind 0.0.0.0 --protected-mode no
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        networks:
            - dorm-net
        environment:
            - TZ=Europe/Kyiv
        healthcheck:
            test: ["CMD", "redis-cli", "-a", "Y47VIdUF8rqwomHRSH2gwFITpjys2kBW", "ping"]
            interval: 5s
            timeout: 5s
            retries: 5

    mysql:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: rootpass
            MYSQL_DATABASE: dorm
            MYSQL_USER: appuser
            MYSQL_PASSWORD: apppass
        volumes:
            - ./database/data:/var/lib/mysql
            - ./database/init:/docker-entrypoint-initdb.d:ro
        networks:
            - dorm-net
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 10s
            retries: 5

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        depends_on:
            - mysql
        environment:
            PMA_HOST: mysql
        ports:
            - "8080:80"
        networks:
            - dorm-net

    backend:
        build: ./backend
        ports:
            - "5000:5000"
        environment:
            DB_HOST: mysql
            DB_USER: appuser
            DB_PASSWORD: apppass
            DB_NAME: dorm
            REDIS_HOST: redis
            REDIS_PORT: 6379
            REDIS_PASSWORD: Y47VIdUF8rqwomHRSH2gwFITpjys2kBW
            EMAIL_USER: dorm.life.service@gmail.com
            EMAIL_PASS: ibmfkhwihvcsnegz
            JWT_SECRET: Y47VIdUF8rqwomHRSH2gwFITpjys2kBW
            NODE_ENV: development
            TZ: "Europe/Kyiv"
            VITE_GOOGLE_CLIENT_ID: 813141304902-2jkpkbc1d6j27iva7kj0r24k1dallnr2.apps.googleusercontent.com
            VITE_GOOGLE_CLIENT_SECRET: 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
        volumes:
            - ./backend:/app
            - /app/node_modules
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - dorm-net
        command: npm start

    frontend:
        build: ./frontend
        ports:
            - "3000:3000"
        environment:
            NODE_ENV: development
            CHOKIDAR_USEPOLLING: "true"
            TZ: "Europe/Kyiv"
        volumes:
            - ./frontend:/app
            - /app/node_modules
        networks:
            - dorm-net
        command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

networks:
    dorm-net:
        driver: bridge

volumes:
    redis-data:
    mysql-data:
        driver: local